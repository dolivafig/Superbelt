{"version":3,"sources":["utils/helpers.js","utils/actions.js","utils/reducers.js","utils/GlobalState.js","components/ProductItem/index.js","utils/queries.js","assets/spinner.gif","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","pages/About.js","components/Nav/index.js","components/Footer/index.js","pages/Success.js","pages/OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["pluralize","name","count","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","UPDATE_PRODUCTS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","reducer","state","action","type","_objectSpread","products","_toConsumableArray","cartOpen","cart","concat","product","map","purchaseQuantity","newState","filter","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","_ref","value","initialState","props","_objectWithoutProperties","_excluded","_useProductReducer","useReducer","_useProductReducer2","_slicedToArray","dispatch","_jsx","useStoreContext","useContext","ProductItem","item","_useStoreContext","_useStoreContext2","image","car","price","quantity","_jsxs","className","children","Link","to","alt","src","onClick","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","gql","_templateObject","_taggedTemplateLiteral","QUERY_CHECKOUT","_templateObject2","QUERY_CATEGORIES","_templateObject3","_templateObject4","QUERY_USER","_templateObject5","ProductList","_useQuery","useQuery","loading","data","useEffect","forEach","then","category","spinner","CategoryMenu","categoryData","id","CartItem","placeholder","onChange","target","role","removeFromCart","AuthService","_classCallCheck","_createClass","key","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","require","config","stripePromise","loadStripe","Cart","_useLazyQuery","useLazyQuery","_useLazyQuery2","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","_getCart","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","sent","stop","apply","arguments","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","Home","Detail","useParams","_useState","useState","_useState2","currentProduct","setCurrentProduct","indexedProducts","_Fragment","description","disabled","p","class","Jumbotron","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","email","password","formState","setFormState","_useMutation","useMutation","_useMutation2","login","error","handleFormSubmit","event","mutationResponse","preventDefault","t0","_x","handleChange","_event$target","_defineProperty","onSubmit","htmlFor","Signup","addUser","firstName","lastName","About","Container","Nav","href","logout","Footer","useLocation","navigate","useNavigate","pathname","Success","addOrder","_saveOrder","_yield$addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","Router","Routes","Route","path","element","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","React","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.00d6b4c7.chunk.js","sourcesContent":["export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('superbelt-store', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import { useReducer } from 'react';\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART,\n} from './actions';\n\n// The reducer is a function that accepts the current state and an action. It returns a new state based on that action.\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    // Returns a copy of state with an update products array. We use the action.products property and spread it's contents into the new array.\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n    // Returns a copy of state, sets the cartOpen to true and maps through the items in the cart.\n    // If the item's `id` matches the `id` that was provided in the action.payload, we update the purchase quantity.\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map((product) => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity;\n          }\n          return product;\n        }),\n      };\n\n    // First we iterate through each item in the cart and check to see if the `product._id` matches the `action._id`\n    // If so, we remove it from our cart and set the updated state to a variable called `newState`\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter((product) => {\n        return product._id !== action._id;\n      });\n\n      // Then we return a copy of state and check to see if the cart is empty.\n      // If not, we set the cartOpen status to  `true`. Then we return an updated cart array set to the value of `newState`.\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState,\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: [],\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen,\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory,\n      };\n\n    // Return the state as is in the event that the `action.type` passed to our reducer was not accounted for by the developers\n    // This saves us from a crash.\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState);\n}\n","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from './reducers'\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction ProductItem(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    car,\n    _id,\n    price,\n    quantity\n  } = item;\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n<div> Applications: </div>\n<div>\n<span> {car}</span>\n        </div>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\nexport default ProductItem;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      car \n      category {\n            _id\n                } \n            }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      car \n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/spinner.7e729fec.gif\";","import React, { useEffect } from 'react';\nimport ProductItem from '../ProductItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  console.log(state);\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              car={product.car}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Type:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\nrequire('dotenv').config();\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          🛒\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          <span role=\"img\" aria-label=\"shocked\">\n            😱\n          </span>\n          You haven't added anything to your cart yet!\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <CategoryMenu />\n      <ProductList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{' '}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <div class='detailImages my-1'>\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n\n          <img\n            class='catalog'\n            src={'/images/Catalog.png'}\n            alt={currentProduct.name}\n          />\n          </div>\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\r\nimport {\r\n    Container\r\n} from 'react-bootstrap';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <h1>About Us</h1>\r\n                <h2>Carried by our commitment to quality service and relentless drive to deliver for our customers.\r\n                    With three generations and counting in the automotive industry, our family has honed our approach\r\n                    to business and defined the values that serve as our touchstones: Honesty, Integrity, and Loyalty.<br>\r\n                    </br><br>\r\n                    </br>\r\n                    We understand that you have a choice when it comes to supplying a fleet, maintaining the optimal\r\n                    inventory levels, and keeping costs low - especially at a time when both fuel prices and demand\r\n                    are rising. In this, supply predictability and no-nonsense deals are what you can expect from us!\r\n                    <br>\r\n                    </br><br>\r\n                    </br>Our belts are made from quality materials and are ethically manufactured from a single long-time\r\n                    source in South Korea.\r\n                </h2>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;\r\n\r\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/about\">\n              About Us\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          Superbelt Store\n        </Link>\n      </h1>\n    \n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst Footer = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  return (\n    <footer className=\"w-100 mt-auto bg-secondary p-4\">\n      <div className=\"container text-center mb-5\">\n        {location.pathname !== '/' && (\n          <button\n            className=\"btn btn-dark mb-3\"\n            onClick={() => navigate('/')}\n          >\n            &larr; Go Back\n          </button>\n        )}\n        {/* <h4>\n          Made with{' '}\n          <span\n            className=\"emoji\"\n            role=\"img\"\n            aria-label=\"heart\"\n            aria-hidden=\"false\"\n          >\n            ❤️\n          </span>{' '}\n          by the Tech Thoughts team.\n        </h4> */}\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase!</h2>\n        <h2>You will now be redirected to the home page</h2>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport About from './pages/About';\nimport Nav from './components/Nav';\nimport Footer from './components/Footer';\nimport { StoreProvider } from './utils/GlobalState';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Routes>\n              <Route \n                path=\"/\" \n                element={<Home />} \n              />\n              <Route \n                path=\"/login\" \n                element={<Login />} \n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />} \n              />\n              <Route \n                path=\"/about\" \n                element={<About />} \n              />\n              <Route \n                path=\"/success\" \n                element={<Success />} \n              />\n              <Route \n                path=\"/orderHistory\" \n                element={<OrderHistory />} \n              />\n              <Route \n                path=\"/products/:id\" \n                element={<Detail />} \n              />\n              <Route \n                path=\"*\" \n                element={<NoMatch />} \n              />\n            </Routes>\n          <Footer />\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}